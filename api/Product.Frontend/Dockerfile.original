# See https://aka.ms/customizecontainer to learn how to customize your debug container and how Visual Studio uses this Dockerfile to build your images for faster debugging.

# This stage is used when running from VS in fast mode (Default for Debug configuration)
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base

WORKDIR /app
EXPOSE 8080
EXPOSE 8081


# This stage is used to build the service project
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src
COPY ["Product.Frontend/Product.Frontend.csproj", "Product.Frontend/"]
COPY ["Project.Caching/Project.Caching.csproj", "Project.Caching/"]
COPY ["Project.Services/Project.Services.csproj", "Project.Services/"]
COPY ["Project.Data/Project.Data.csproj", "Project.Data/"]
COPY ["Project.Enums/Project.Enums.csproj", "Project.Enums/"]

COPY ["Project.ViewModels/Project.ViewModels.csproj", "Project.ViewModels/"]
RUN dotnet restore "./Product.Frontend/Product.Frontend.csproj"
COPY . .
WORKDIR "/src/Product.Frontend"
RUN dotnet build "./Product.Frontend.csproj" -c $BUILD_CONFIGURATION -o /app/build

# This stage is used to publish the service project to be copied to the final stage
FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "./Product.Frontend.csproj" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

# This stage is used in production or when running from VS in regular mode (Default when not using the Debug configuration)
FROM base AS final


# Optional: Set time zone
ENV TZ=Asia/Ho_Chi_Minh
RUN apt-get update && \
    apt-get install -y tzdata && \
    ln -sf /usr/share/zoneinfo/$TZ /etc/localtime && \
    dpkg-reconfigure -f noninteractive tzdata && \
    apt-get clean && rm -rf /var/lib/apt/lists/*
RUN date

WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "Product.Frontend.dll"]